ll /etc | rg hosts
ls -lah /etc/ | rg hosts
sudo cp /etc/hosts /etc/hosts.backup.20220802164611
cat /etc/hosts
clear;reset
cat /etc/hosts
ls /etc | grep helloo
ls /etc | grep helloo
ls /etc | grep helloo
ls /etc | grep helloo
cat hell
cat /etc/helloo
rm /etc/helloo
sudo rm /etc/helloo
ls
ls /etc/
cd /etc
ls
ls
ls
ls /etc/hosts
ls /etc/
ls /etc/ | grep hello
ls /etc | grep helloo
cat helloo
cat helloo
rm helloo
sudo rm helloo
vim /etc/hosts
cd /private/etc/
ls
cat helloo
cat /etc/helloo
rm helloo
sudo rm helloo
sudo rm hello
cat hello
cat hello
cat hello
cat hello
cat hello
cat hello
cat hello
cat /etc/hello
cat /etc/hello
sudo vim /etc/hello-test
cat /etc/hello-test
cat /etc/hello-test
cat /etc/hello
sudo rm /etc/hello
sudo rm /etc/hello
sudo rm /etc/hello-test 
sudo rm /etc/hello-test 
sudo rm /etc/hello-test 
sudo rm /etc/hello-test 
sudo echo "initest" /etc/hello-test
sudo echo "initest">/etc/hello-test
sudo su
cat /etc/hello-test 
cat /etc/hello-test 
cat /etc/hello-test
cat /etc/hello-test
cat /etc/hello-test
cat /etc/hello-test_backup_copy
cat /etc/hello-test_backup_copy
cat /etc/hello-test
cat /etc/hello-test
cat /etc/hello-test_backup_copy
cat /etc/hello-test

cat /etc/hello-test
cat /etc/hello-test_backup_copy
rm -rf /etc/hello-test*
sudo rm -rf /etc/hello-te*
cd
touch test
echo "A">test
echo "\nB">test
cat test
rm test
vd 
ls
cd packages
ls
cd mac-arm64
ls
cd App\ Name.app
ls
cd Contents
ls
fd
fd | less
..
..
vd
pwd
cd ..
ls
mv App\ Name.app test.app
ls
test.app -h
open test.app
rm -rf test.app
ls
open App\ Name.app
ls
open App\ Name.app
open App\ Name.app
ls
vd
ls
cd ..
ls
cd App\ Name\ Helper\ \(Renderer\).app
ls
cd Contents
ls
vd
cat PkgInfo
ls
cd ..
ls
lfcd
lfcd
fd --hidden
fd --hidden | rg index
cd ..
ls
cd ..
ls
rm -rf packages
rm -rf dist
ls
gst
gst
gst
nvm ls
npm install file-loader --save-dev
npm ls util
npm ls fs
npm i crypto-browserify --save-dev
npm i util
npm i --save-dev os-browserify
npm i --save-dev path-browserify
npm i --save-dev path-browserify
npm i --save-dev stream-browserify
npm i --save-dev fs-browserify
yarn install -D file-loader
yanrn add file-loader --dev
yarn add file-loader --dev
gst
gst
ga .
gcm -m "add nodeIntegration flags in forge config. forge config are now splitted from package.json settings"
gst
gps
ls
cd out
ls
open our-needs-darwin-arm64/our-needs.app
cd ..
rm -rf out
rm -rf out
ls
cd oout
ls
cd out
ls
cd make
ls
cd ../our-needs-darwin-arm64
ls
open our-needs.app
..
..
rm -rf out
ls
rm -rf out
ls
cd out
ls
cd our-needs-darwin-arm64
ls
open our-needs.app
open our-needs.app
cd our-needs.app
ls
vd
ls
cd .webpack
ls
vd
ls
cat index.js.map
vim index.js
lfcd
ls
rm -rf out
open out/our-needs-darwin-arm64/our-needs.app
rm -rf out
open out/our-needs-darwin-arm64/our-needs.app
ls
rm -rf out
yarn add react react-dom\
yarn add --dev @types/react @types/react-dom
gst
gst
open out/our-needs-darwin-arm64/our-needs.app
rm -rf out
open out/our-needs-darwin-arm64/our-needs.app
rm -rf out
rm -rf out .webpack
rm -rf out .webpack
rm -rf .webpack
open out/our-needs-darwin-arm64/our-needs.app
rm -rf .webpack
rm -rf out
rm -rf out
rm -rf out .webpack
open out/our-needs-darwin-arm64/our-needs.app
rm -rf out
rm -rf .webpack
open out/our-needs-darwin-arm64/our-needs.app
open out/our-needs-darwin-arm64/our-needs.app
rm -rf .webpack
rm -rf out
open out/our-needs-darwin-arm64/our-needs.app
rm -rf .webpack
rm -rf out
open out/our-needs-darwin-arm64/our-needs.app
rm -rf .webpack
rm -rf out
rm -rf ./.webpack ./out
ll
open out/our-needs-darwin-arm64/our-needs.app
rm -rf ./.webpack ./out
ll
rm -rf ./.webpack ./out
ll
open out/our-needs-darwin-arm64/our-needs.app
rm -rf ./.webpack ./out
open out/our-needs-darwin-arm64/our-needs.app
vd
npm i
npm run dev
gst
git restore hosts
gst
gba
gfe;gpl
gfe;gpl
npm run dev
gst
git retore .
git restore .
gst
gst
npm run dev
sudo npm run dev
clear;reset
sudo npm run dev
gst
git restore .
gst
rm hosts_copy
npm install sudo-prompt
npm audit fix --force
npm i
npm run dev
clear
reset
npm run dev
npm run dev
clear;rest
clear;reset
npm run dev
gst
npm run build:electron
npm run build:run
npm run package-dist
npm run package:dist
ls
cd packages
ls
cd mac-arm64
ls
open App\ Name.app
...
..
..
gst
rm -rf dist
vim hosts
git restore hosts
gst
npm run package
gst
npm run dev
npm run dev
gst
npm run dev
gst
gst
git diff hosts
gst
git diff hosts
ggst
gst
git diff hosts
git restore hosts
gst
ga .
gcm -m "pake sudo-prompt buat eskalasi user ke root. untuk filePath ada di file const.ts"
gst
gps
gst
gfe;gpl
cp hosts_copy hosts
rm hosts_copy
cat hosts
gst
npm run dev
clear;reset
npm run dev
npm run dev
npm run dev
gst
git diff hosts
cat
;s
rm hosts
rm hosts_cop
gst
rm hosts_copy
gst
ga .
gst
ga .
gcm -m "bikin helper sudo, backup file /etc/hosts sebelum click button"
gst
gps
npm run dev
gst
clear;reset
rm -rf node_modules
npm i
npm run dev
gst
gfe;gpl
rm -rf node_modules
npm i && npm run dev
clear
reset;
ll
cd dist
ls
cd ..
rm -rf dist
netstat -tunlp
netstat -anlp
netstat 
 lsof -i tcp:3000 
 lsof -i tcp:4000
ll
gst
nvim .gitignore
rm -rf webpack
gst
git restore webpack/
gst
ls
clear
reset
ll
npm run dev
gst
ga .
gcm -m "append instead of replacing all contents in file"
gst
gps
npm run package
ll
open package
cd packages
ls
cd mac-arm64
ls
open App\ Name.app
npm run package:dis
npm run package:dist
npm run package
cd ..
ls
cd ..
ls
fd | grep App
fd | grep .app
fd | grep \.app
fd | grep app
fd
fd | grep packages
fd --hidden | grep packages
rg 
open -a /Users/ian/projects_tmp/personal/GUI-dns-host/packages/mac-arm64/App Name.app
open /Users/ian/projects_tmp/personal/GUI-dns-host/packages/mac-arm64/App Name.app
open "/Users/ian/projects_tmp/personal/GUI-dns-host/packages/mac-arm64/App Name.app"
ELECTRON_ENV=development open "/Users/ian/projects_tmp/personal/GUI-dns-host/packages/mac-arm64/App Name.app"
open "/Users/ian/projects_tmp/personal/GUI-dns-host/packages/mac-arm64/App Name.app" --args --remote-debugging-port=8315 
open "/Users/ian/projects_tmp/personal/GUI-dns-host/packages/mac-arm64/App Name.app" --remote-debugging-port
clear;reset
npm run package
npm run build
npm run package
npm run package
gst
git restore src/main/main.ts
ls
gst
gst
npm run start
rm -rf node_modules
clear;reset
npm i
npm run start
clear;reset
npm run start
npm run start
clear;reset
npm run start
cls
clr
npm run start
clr;npm run start
clear;reset
clr;npm run start
clr;npm run start
clr;npm run start
clear
reset
clr;npm run start
clr;reset
clr;npm run start
clear;reset
clr;npm run start
clear;reset
clr;npm run start
clear;reset
clr;npm run start
clr;npm run start
clr;npm run start
clr;npm run start
clr;npm run start
clear;reset
clr;npm run start
clear;reset
clr;npm run start
clear;reset
clr;npm run start
clr;npm run start
clear;reset
clr;npm run start
clear;reset
clr;npm run start
clr;npm run start
clr;npm run start
clr;npm run start
clr;npm run start
clr;npm run start
clear;reset
clr;npm run start
clr;npm run start
clear;reset
clr;npm run start
clr;npm run start
clear;reset
clr;npm run start
clear;reset
clr;npm run start
clear;reset
clr;npm run start
nvm ls
ncu -u
rm -rf node_modules
yarn install
ncu -u
ncu -u
yarn install
rm -rf node_modules
yarn install
npm run start
clear;reset
npm run start
gst
npm run lint
npm run make
ls
gst
cd out
ls
cd our-needs-darwin-arm64
ls
open our-needs.app
..
..
rm -rf out
ls
npm run start
gst
rm -rf node_modules
ll
yarn install
rm -rf node_modules
rm -rf yarn.lock
ls
gst
ll
ncu -u
rm -rf node
yarn install
gst
npm run start
clear;reset
npm run start
npm run start
npm run start
clear;reset
npm run start
cls
clr
npm run start
clear;reset
npm run start
electron .
npm run dev
npm run dev
gst
git diff package.json
git restore package.json
ls
git diff yarn.lock
git restore yarn.lock
gst
rm -rf dist
git diff forge.config.js
gst
npm run dev
gst
npm run dev
npm run dev
clr
clr;npm run start
clear;reset
clr;npm run start
clear;reset
clr;npm run start
clear;reest
clear
clear;reset
clr;npm run start
clear;reset
clr;npm run start
gst
ga /
git diff src/pages/dashboard/index.tsx
gst
git diff src/index.ts
gst
ga .
gcm -m "solve required('events') issue with contextIsolation: false, solve node_modules cant resolve modules with  nodeIntegration: true"
gst
gps
gst
npm run make
gst
ls
npm run start
clear;reset
npm run start
npm run start
gst
ga .
gcm -m "fix routes, path must be '/main_window'"
gst
gps
npm run make
npm run package
npm run package
gst
ncdu
npm run make
npm run make
yarn add --dev @babel/core @babel/preset-react babel-loader
yarn add react react-dom
npm run make
git diff package.json
gst
npm run make
rm -rf .webpack out
npm run make
npm run make
npm run make
npm run make
npm run make
npm run make
npm run make
npm run start
npm run make
npm run package
clear;reset
npm run package
npm run package
npm run package
npm run package
npm run start
npm run package
gst
git diff package.json
gst
git diff src/app.tsx
gst
gst src/index.
gst src/index.ts
gst
git diff src/index.ts
gst
rm -rf node_modules
git diff src/app.tsx
git restore src/app.tsx
gst
nvim src/index.
nvim src/index.ts
git diff src/index.ts
gst
git diff src/main.tsx
gst
git restore src/main.tsx
git diff package.json
git restore package.json
gst
git diff webpack.rules.js
git restore webpack.rules.js
gst
git diff yarn.lock
git restore yarn.lock
ls
gst
rm src/app.tsx.backup
gst
git diff src/index.ts
\:q
gst
git diff src/route/routes.tsx
gst
git restore src/route/routes.tsx
gst
git fetch && git pull
gst
git pull
git diff src/index.ts
git restore src/index.ts
gst
git pull
gfe;gpl
nvim src/index.ts
gv
git fetch  && git pull
gfe;gpl
nvim
nvim
vd
npm run start
ls
cd ..
rm -rf bye-trustpositif
npx create-electron-app bye-trustpositif --template=typescript-webpack
npm run start
cd bye-trustpositif
ls
open out/bye-trustpositif-darwin-arm64/bye-trustpositif.app
ncdu
vd
nvm ls
ll
nvim
code .
gst
tig
nvim
nvim 
nvim
nvim
nvim
gst
cat /etc/hosts_backup_copy
cat /etc/hosts
nvim
nvim 
gst
ga .
nvim
nvim 
nvim
rg -i renderer
vim webpack/react.webpack.ts
nvim src/main/main.ts
ls
nvim
gfe;gpl
gfe;gpl
gst
git checkout electron-forge
gst
gst
nvim package.json
gst
nvim
gst
git restore .
gst
nvim
nvim
rg nodeIntegration
nvim src/main.tsx
nvim src/renderer.ts
ll
nvim
gst
git diff src/index.ts
git diff webpack.main.config.js
ls
nvim
rg -i 'externals: \
'
rg -i 'externals: '
nvim webpack.main.config.js
rg -o nodepolyfill
rg -o nodepolyfill
rg -i nodepoly
rg -i polyfill
nvim package.json
nvim package.json
nvim
nvim webpack.rules.js
rm package-lock.json
nvim package.json
npm i -g npm-check-updates
ncu
ls
ll
ll
rm -rf package.json
gst
git restore package.json
gst
nvim package.json
nvim webpack.main.config.js
nvim package.json
git status
rm package-lock.json
git restore src/index.ts
git restore webpack.main.config.js
git restore webpack.rules.js
gst
nvim package.json
nvim webpack.rules.js
nvim forge.config.js
nvim 
nvim package.json
nvim forge.config.js
nvim forge.config.js
rg --hidden "require('"
rg --hidden "require\('"
nvim webpack.main.config.js 
nvim
rg --hidden 'contextIsolation\
'
rg --hidden 'contextIsolation'
cd node_modules
rg --hidden 'contextIsolation'
nvim electron/electron.d.ts
rg --hidden -i contextisolation
cd ..
nvim
rg -i nodeIntegration
nvim forge.config.js
rg -i main_window
ls
nvim
rg -i main_window
nvim forge.config.js
vim package.json
nvim 
cp src/app.tsx src/app.tsx.backup
nvim 
rg -i root
nvim 
nvim 
nvim 
gst
gfe;gpl
rg "FZF_DEFAULT"
rg . "FZF_DEFAUILT"
rg "FZF_DEFAULT"
rg "FZF_DEFAULT" .
ll
nvim .functionrc
the quick brown fox jumps over the lazy dog.jk
clear;reset
nvim .functionrc
rg 'FZF'
rg 'FZF_'
nvuim,
nvuim
nvim
rg "EXPORT"
rg "EXPORT "
rg "EXPORT "
clear;reset
rg "EXPORT "
rg "EXPORT "
ls
clear;reset
cd
ll
cp .vimrc .vimrc.bak
nvim .vimrc
nvim
cd ~/.local/share/nvim
fd
rm -rf *
ls
cd ~
ll
vim
vim
vim,
vim
nvim
vim ~/.vimrc
exit
vim ~/.vimrc.bak
nvim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
vim
vim
nvm ls
vim
clear;reset
sudo port install emacs
sudo port uninstall emacs
sudo port clean emacs
sudo port install emacs-mac-app
cd ~/dotfiles-old
gst
git diff .aliasrc
gst
cat t
git diff .aliasrc
ll
rm t
gst
git diff .aliasrc
nvim .aliasrc
gst
ga .
gcm -m "update"
ll ~
cp ~/.vimrc .
gst
git diff .vimrc
gst
ga .
gcm -m "update vimrc"
gst
gps
cd
cd dotfiles-old
gst
cd ..
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d
rm -rf .emacs.d
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d
~/.emacs.d/bin/doom install
sudo port install emacs
~/.emacs.d/bin/doom install
cd wiki
gst
ga .
gcm -m "new update"
gs
gst
gps
ls
cd ../projects_tmp
ls
cd personal
ls
npm create vite@latest intro-svelte -- --template svelt
npm create vite@latest intro-svelte -- --template svelte
cd intro-svelte
npm install
npm run dev
tmux ls
tmux 
cd projects_tmp/personal
ls
mkdir real-time-streaming-react
cd re
cd real-time-streaming-react
ls
cd ..
mkdir real-time-streaming-node
cd real-time-streaming-node
ls
nvim package.json
ncu -u
ll
vim package.json
nvim producer.js
nvim consumer.js
ls
nvim producer.js
vim producer.js
nvm ls
nvim 
cd ..
rm -rf real-time-streaming-*
clear;reset
ssh ian@arians-thinkpad-x220.local
nvim
cd ..
vd
nvim
rg -i FZF_DEFAULT
nvim
nvim ~/.config/nvim/init.vim 
vim
]
vim ~/.vimrc
vim ~/.vim,rc
vim ~/.vimrc
nvim,,
nvim
ll
ll
vim ~/.vim,rc
vim ~/.vimrc
ls
rm -rf ~/.vim/
nvim
nvuim,
nvim
vuim,
nvim
exot
exuit
exit
vui,m
nvim
nvim -u NONE
nvim
ping google.com
sudo port selfupdate
sudo port upgrade outdated
clear;reeset
clear;reset
vim ~/.bashrc
ll
vim ~/.profile
doom sync
nvim ~/.doom.d/config.el
vim ~/.vimrc
nvim
sudo rm -rf ~/.local/share/nvim/*
nvim ~/.config/nvim/init.vim 
nvim
vim ~/.VIMRC
vim ~/.vimrc
nvim
nvim
nvim
nvim
rm -rf ~/.local/share/nvim/*
vim ~/.vimrc
vim ~/.vimr
vim ~/.vimrc
env | grep VIM
nvim
nvim
nvim
nvim
nvim --version
cd ~/.local/share
ls
cd nvim
ls
ll
ll
rm -rf shada
exitr
exit
nvim ~/.config/alacritty/alacritty.yml
exit
clear;rreset
ssh ian@arians-thinkpad-x220.local
ssh ian@arians-thinkpad-x220.local
